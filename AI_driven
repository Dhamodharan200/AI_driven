import numpy as np
import pandas as pd
import yfinance as yf
import matplotlib.pyplot as plt
from sklearn.preprocessing import MinMaxScaler
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import LSTM, Dense

# Step 1: Load stock data (e.g., Apple stock)
stock_symbol = 'AAPL'  # Example: Apple stock
data = yf.download(stock_symbol, start='2010-01-01', end='2023-01-01')

# Step 2: Preprocess data (only use 'Close' prices)
data = data[['Close']]  # Only using the 'Close' prices for simplicity
plt.plot(data)
plt.title(f'{stock_symbol} Stock Prices')
plt.xlabel('Date')
plt.ylabel('Price')
plt.show()

# Step 3: Scale the data using MinMaxScaler (between 0 and 1)
scaler = MinMaxScaler(feature_range=(0, 1))
scaled_data = scaler.fit_transform(data)

# Step 4: Create training and test datasets
train_size = int(len(scaled_data) * 0.8)  # 80% for training
train_data, test_data = scaled_data[:train_size], scaled_data[train_size:]

# Step 5: Prepare data for LSTM (create sequences)
def create_dataset(data, time_step=60):
    X, y = [], []
    for i in range(len(data)-time_step-1):
        X.append(data[i:(i+time_step), 0])
        y.append(data[i+time_step, 0])
    return np.array(X
